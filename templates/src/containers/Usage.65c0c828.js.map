{"version":3,"sources":["webpack:///templates/src/containers/Usage.65c0c828.js","webpack:////home/pwl/work/freshcode_public/beatfix.live/www/src/containers/Product.js","webpack:////home/pwl/work/freshcode_public/beatfix.live/www/src/containers/Usage.js"],"names":["webpackJsonp","137","module","exports","__webpack_require__","Object","defineProperty","value","_react","_react2","obj","__esModule","default","createElement","52","_interopRequireDefault","_reactStatic","_Product","_Product2","withRouteData"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAGAC,QAAOC,eAAeH,EAAS,cAC3BI,OAAO,GCTX,IAAAC,GAAAJ,EAAA,GDcIK,EAEJ,SAAgCC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAFlDF,EAMrCL,GAAQS,QCjBO,iBACXH,GAAAG,QAAAC,cAAA,2BD0BEC,GACA,SAAUZ,EAAQC,EAASC,GAEjC,YAiBA,SAASW,GAAuBL,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAdvFL,OAAOC,eAAeH,EAAS,cAC3BI,OAAO,GErCX,IAAAC,GAAAJ,EAAA,GF0CIK,EAAUM,EAAuBP,GEzCrCQ,EAAAZ,EAAA,IACAa,EAAAb,EAAA,KF8CIc,EAAYH,EAAuBE,EAMvCd,GAAQS,SEjDO,EAAAI,EAAAG,eAAc,iBACzBV,GAAAG,QAAAC,cAAA,WACIJ,EAAAG,QAAAC,cAAA,mBACAJ,EAAAG,QAAAC,cAAA,oIAEwBJ,EAAAG,QAAAC,cAAA,0CAFxB,mDAGOJ,EAAAG,QAAAC,cAACK,EAAAN,QAAD,MAHP,2BAKAH,EAAAG,QAAAC,cAAA,mBACWJ,EAAAG,QAAAC,cAACK,EAAAN,QAAD,MADX,qNAKAH,EAAAG,QAAAC,cAAA,sYAMAJ,EAAAG,QAAAC,cAAA,oHAGAJ,EAAAG,QAAAC,cAAA,iEACyDJ,EAAAG,QAAAC,cAACK,EAAAN,QAAD,MADzD,0BAIAH,EAAAG,QAAAC,cAAA,kBACAJ,EAAAG,QAAAC,cAAA,4IAIAJ,EAAAG,QAAAC,cAAA,sIAE2BJ,EAAAG,QAAAC,cAAA,6DAF3B","file":"templates/src/containers/Usage.65c0c828.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n\nexports.default = function () {\n    return _react2.default.createElement(\n        'i',\n        null,\n        'beatfix.live'\n    );\n};\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactStatic = __webpack_require__(27);\n\nvar _Product = __webpack_require__(137);\n\nvar _Product2 = _interopRequireDefault(_Product);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n\nexports.default = (0, _reactStatic.withRouteData)(function () {\n    return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n            'h1',\n            null,\n            'Usage'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'First and foremost, avoid the tendancy to focus on the spinning \\'rotor\\' (it is rather hypnotizing). Instead, choose and ',\n            _react2.default.createElement(\n                'u',\n                null,\n                'focus on a single \\'indicator\\''\n            ),\n            ' on the circle. This will facilitate the use of ',\n            _react2.default.createElement(_Product2.default, null),\n            ' as a simple metronome.'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'To use ',\n            _react2.default.createElement(_Product2.default, null),\n            ' for tempo correction you need to maintain the ambient tempo (being played) whilst comparing it with the desired tempo being shown. In doing so, one can keep a performance going even if the tempo is incorrect.'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'When comparing the ambient tempo with the display, you\\'ll find the \\'one\\' beat lands on a particular indicator on the circle. If this point remains in the same place then you\\'re in time. If this point \\'slips\\' then you\\'re out of time. If this point slips clockwise (away from the rotor) then you\\'re slow. If this point slips counter-clockwise (toward the rotor) then you\\'re fast.'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'To fix tempo, simply ride the start or end of the beat to gradually reduce and eliminate the \\'slipage\\'.'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'Naturally, this should all be practiced before using ',\n            _react2.default.createElement(_Product2.default, null),\n            ' during a performance.'\n        ),\n        _react2.default.createElement(\n            'h1',\n            null,\n            'Tips'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'There are a number of + and - buttons that can be used to adjust the tempo. They are designed to minimize the number of clicks.'\n        ),\n        _react2.default.createElement(\n            'p',\n            null,\n            'The tempo shown in the center of the circle provides a way to \\'train\\' the metronome to the desired beats-per-minute. Just ',\n            _react2.default.createElement(\n                'u',\n                null,\n                'repeatedly tap on the number at the desired rate'\n            ),\n            '. This is handy to gauge the tempo of a song one is listening to.'\n        )\n    );\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// templates/src/containers/Usage.65c0c828.js","import React from 'react'\n//\n\nexport default () => (\n    <i>beatfix.live</i>\n)\n\n\n\n// WEBPACK FOOTER //\n// /home/pwl/work/freshcode_public/beatfix.live/www/src/containers/Product.js","import React from 'react'\nimport {withRouteData} from 'react-static'\nimport Product from \"./Product\";\n//\n\nexport default withRouteData(() => (\n    <div>\n        <h1>Usage</h1>\n        <p>\n            First and foremost, avoid the tendancy to focus on the spinning 'rotor' (it is rather hypnotizing).\n            Instead, choose and <u>focus on a single 'indicator'</u> on the circle. This will facilitate the use\n            of <Product/> as a simple metronome.\n        </p>\n        <p>\n            To use <Product/> for tempo correction you need to maintain the ambient tempo (being played) whilst\n            comparing it with the desired tempo being shown. In doing so, one can keep a performance going even if the\n            tempo is incorrect.\n        </p>\n        <p>\n            When comparing the ambient tempo with the display, you'll find the 'one' beat lands on a particular\n            indicator on the circle. If this point remains in the same place then you're in time. If this point 'slips'\n            then you're out of time. If this point slips clockwise (away from the rotor) then you're slow. If this point\n            slips counter-clockwise (toward the rotor) then you're fast.\n        </p>\n        <p>\n            To fix tempo, simply ride the start or end of the beat to gradually reduce and eliminate the 'slipage'.\n        </p>\n        <p>\n            Naturally, this should all be practiced before using <Product/> during a performance.\n        </p>\n\n        <h1>Tips</h1>\n        <p>\n            There are a number of + and - buttons that can be used to adjust the tempo. They are designed\n            to minimize the number of clicks.\n        </p>\n        <p>\n            The tempo shown in the center of the circle provides a way to 'train' the metronome to the desired\n            beats-per-minute. Just <u>repeatedly tap on the number at the desired rate</u>. This is handy to gauge the tempo of\n            a song one is listening to.\n        </p>\n    </div>\n))\n\n\n\n// WEBPACK FOOTER //\n// /home/pwl/work/freshcode_public/beatfix.live/www/src/containers/Usage.js"],"sourceRoot":""}